#!/usr/bin/perl -w

#use lib "/home/pi/media/scripts/perl/";
use lib "/opt/fpp/plugins/BetaBrite/";
use AlphaSign;

use IO::Socket::INET;

my $input = $ARGV[0] || "";
#my $newline = $sign->{CTRL_NEWLINE};

my $line1 = "";
my $line2 = "";
my $line3 = "";


#text is line 2

$line1 = $ARGV[0] if (defined($ARGV[0]));
$line2 = $ARGV[1] if (defined($ARGV[1]));
$line3 = $ARGV[2] if (defined($ARGV[2]));


#my $sign = new AlphaSign("./test.out");
my $sign = new AlphaSign($line1);
#my $sign = new AlphaSign("/dev/ttyUSB1");

my $newline = $sign->{CTRL_NEWLINE};

$sign->SetColor($sign->{COLOR_RED});

if ($line1 ne "") {
	if (length($line1) <= 16) {
		$line1 = "\x1d\x31\x31" . $line1;
	} else {
		$line1 = "\x1d\x31\x30" . $line1;
	}
}

my $str = $sign->{COLOR_RED} . $line1;


# flush after every write
$| = 1;
my ($socket,$data);



#  We call IO::Socket::INET->new() to create the UDP Socket 
# and bind with the PeerAddr.



$socket = new IO::Socket::INET (
PeerAddr   => "$line2",
Proto        => 'tcp',
Type => SOCK_STREAM
) or die;
#send operation


# write on the socket to server.
$data = $sign->createString($str);

#printf($data);


# we can also send the data through IO::Socket::INET module,
$socket->send($data);
	
$socket->close();